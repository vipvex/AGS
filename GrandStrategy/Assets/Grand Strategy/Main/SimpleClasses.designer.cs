// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.Serialization;
    using UnityEngine;
    
    
    public class HexBase : object {
        
        private Int32 _XIndex;
        
        private Int32 _YIndex;
        
        private Vector3 _CubeIndex;
        
        private Int32 _Elevation;
        
        private Int32 _Humidity;
        
        private Int32 _Temperature;
        
        private Vector3 _WorldPos;
        
        private TerrainType _TerrainType;
        
        private VegetationState _VegetationState;
        
        private Hex _Parent;
        
        private Int32 _MovementPenalty;
        
        private List<ResourceViewModel> _Resources;
        
        public Int32 XIndex {
            get {
                return _XIndex;
            }
            set {
                _XIndex = value;
            }
        }
        
        public Int32 YIndex {
            get {
                return _YIndex;
            }
            set {
                _YIndex = value;
            }
        }
        
        public Vector3 CubeIndex {
            get {
                return _CubeIndex;
            }
            set {
                _CubeIndex = value;
            }
        }
        
        public Int32 Elevation {
            get {
                return _Elevation;
            }
            set {
                _Elevation = value;
            }
        }
        
        public Int32 Humidity {
            get {
                return _Humidity;
            }
            set {
                _Humidity = value;
            }
        }
        
        public Int32 Temperature {
            get {
                return _Temperature;
            }
            set {
                _Temperature = value;
            }
        }
        
        public Vector3 WorldPos {
            get {
                return _WorldPos;
            }
            set {
                _WorldPos = value;
            }
        }
        
        public TerrainType TerrainType {
            get {
                return _TerrainType;
            }
            set {
                _TerrainType = value;
            }
        }
        
        public VegetationState VegetationState {
            get {
                return _VegetationState;
            }
            set {
                _VegetationState = value;
            }
        }
        
        public Hex Parent {
            get {
                return _Parent;
            }
            set {
                _Parent = value;
            }
        }
        
        public Int32 MovementPenalty {
            get {
                return _MovementPenalty;
            }
            set {
                _MovementPenalty = value;
            }
        }
        
        public List<ResourceViewModel> Resources {
            get {
                return _Resources;
            }
            set {
                _Resources = value;
            }
        }
        
        public virtual string Serialize() {
            var jsonObject = new JSONClass();
            jsonObject.Add("XIndex", new JSONData(this.XIndex));
            jsonObject.Add("YIndex", new JSONData(this.YIndex));
            jsonObject.Add("CubeIndex", new JSONData(this.CubeIndex));
            jsonObject.Add("Elevation", new JSONData(this.Elevation));
            jsonObject.Add("Humidity", new JSONData(this.Humidity));
            jsonObject.Add("Temperature", new JSONData(this.Temperature));
            jsonObject.Add("WorldPos", new JSONData(this.WorldPos));
            jsonObject.Add("TerrainType", new JSONData((int)this.TerrainType));;
            jsonObject.Add("VegetationState", new JSONData((int)this.VegetationState));;
            jsonObject.Add("MovementPenalty", new JSONData(this.MovementPenalty));
            return jsonObject.ToString();
        }
        
        public virtual void Deserialize(string json) {
            var node = JSON.Parse(json);
            if (node["XIndex"] != null) {
                this.XIndex = node["XIndex"].AsInt;
            }
            if (node["YIndex"] != null) {
                this.YIndex = node["YIndex"].AsInt;
            }
            if (node["CubeIndex"] != null) {
                this.CubeIndex = node["CubeIndex"].AsVector3;
            }
            if (node["Elevation"] != null) {
                this.Elevation = node["Elevation"].AsInt;
            }
            if (node["Humidity"] != null) {
                this.Humidity = node["Humidity"].AsInt;
            }
            if (node["Temperature"] != null) {
                this.Temperature = node["Temperature"].AsInt;
            }
            if (node["WorldPos"] != null) {
                this.WorldPos = node["WorldPos"].AsVector3;
            }
            this.TerrainType = (TerrainType)node["TerrainType"].AsInt;
            this.VegetationState = (VegetationState)node["VegetationState"].AsInt;
            if (node["MovementPenalty"] != null) {
                this.MovementPenalty = node["MovementPenalty"].AsInt;
            }
        }
    }
    
    public class GameTickBase : object {
        
        private Int32 _Speed;
        
        public Int32 Speed {
            get {
                return _Speed;
            }
            set {
                _Speed = value;
            }
        }
        
        public virtual string Serialize() {
            var jsonObject = new JSONClass();
            jsonObject.Add("Speed", new JSONData(this.Speed));
            return jsonObject.ToString();
        }
        
        public virtual void Deserialize(string json) {
            var node = JSON.Parse(json);
            if (node["Speed"] != null) {
                this.Speed = node["Speed"].AsInt;
            }
        }
    }
