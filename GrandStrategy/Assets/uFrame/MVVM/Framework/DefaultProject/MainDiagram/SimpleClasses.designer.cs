// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using uFrame.Kernel;
using uFrame.MVVM;
using uFrame.MVVM.Bindings;
using uFrame.Serialization;


public class IntroFinishedEventBase : object {
    
    public virtual string Serialize() {
        var jsonObject = new JSONClass();
        return jsonObject.ToString();
    }
    
    public virtual void Deserialize(string json) {
        var node = JSON.Parse(json);
    }
}

public class AssetLoadingProgressEventBase : object {
    
    private Single _Progress;
    
    private String _Message;
    
    public Single Progress {
        get {
            return _Progress;
        }
        set {
            _Progress = value;
        }
    }
    
    public String Message {
        get {
            return _Message;
        }
        set {
            _Message = value;
        }
    }
    
    public virtual string Serialize() {
        var jsonObject = new JSONClass();
        jsonObject.Add("Progress", new JSONData(this.Progress));
        return jsonObject.ToString();
    }
    
    public virtual void Deserialize(string json) {
        var node = JSON.Parse(json);
        if (node["Progress"] != null) {
            this.Progress = node["Progress"].AsFloat;
        }
    }
}

public class StartAssetLoadingCommandBase : object {
    
    public virtual string Serialize() {
        var jsonObject = new JSONClass();
        return jsonObject.ToString();
    }
    
    public virtual void Deserialize(string json) {
        var node = JSON.Parse(json);
    }
}

public class ResolutionInformationBase : object {
    
    private Int32 _Width;
    
    private Int32 _Height;
    
    public Int32 Width {
        get {
            return _Width;
        }
        set {
            _Width = value;
        }
    }
    
    public Int32 Height {
        get {
            return _Height;
        }
        set {
            _Height = value;
        }
    }
    
    public virtual string Serialize() {
        var jsonObject = new JSONClass();
        jsonObject.Add("Width", new JSONData(this.Width));
        jsonObject.Add("Height", new JSONData(this.Height));
        return jsonObject.ToString();
    }
    
    public virtual void Deserialize(string json) {
        var node = JSON.Parse(json);
        if (node["Width"] != null) {
            this.Width = node["Width"].AsInt;
        }
        if (node["Height"] != null) {
            this.Height = node["Height"].AsInt;
        }
    }
}
